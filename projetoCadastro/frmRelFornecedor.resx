<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqAAAAdwAA
        AEgAAABKBgcHvAYHB7oAAAAvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAABBAAAAeggL
        DsYyRlr/FBwk7R8hJO2Aipr/XmVx/wAAALYAAAB/AAAAQwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAASxMa
        IuE5T2b/FyAp/22Xwv9RcpP/RUtU/6u3zf9FSlP/LC81/2Vsef8cHiHeAAAAPwAAAAsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgcJ
        DKUWHifzHys4/nqp2v9IY4D/JTRD/y5AU/9bYWr/Z2x2/2lwff+7yeD/pbDF/yMlKv4ZGx/rCwsNqAAA
        ABUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEB
        AVcCAgO8GSMt+XGdyv81SV//QFhy/32u4P8nNkb/T1FV/87W5P/a4vH/v8vg/2tzgf8yNjz/cXmH/667
        0v81OUD6AAAAswEBAXwAAAAVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAdEBcd2lJxkv8nNUX/VHSW/3Wj0v8kMkD/SWeF/ys8Tv+Lj5j/5+///+Do9v9rcHj/WVxi/7G8
        z/+4xt3/Zm16/ywwNf9tdYP/RktU/wAAAHEBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAADQAAADYMERbSZo22/2KIsP8XISr/aJC6/0BZc/8kJSj/bHB3/9DX5f/j6/r/4en4/9DX
        5f/T2+n/jZSh/zg7Qf9ZXmj/r7zT/7fF3P9HTFT/AAAAewAAABwAAAAOAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABQAAAEgJBwS6Ew8I3wAAANscJjH/MUVZ/ycqLf8rMjv/MTc//6mvuv/l7fz/4+v6/+Pr
        +v/i6vr/5e38/4yRmv9HSU7/qK24/8/Z6v+Bipn/MDdA/xslMP0EBQbQEAwH3ggGA7sAAAA2AAAAAAkH
        BAAAAAAAAAAAAQAAACgCAgGYIhoP8GNLK/90WDL/HBcQ/2Nmbf+FiZH/w8rX/8LI1f/Hztv/4ur5/+Lq
        +f/g6Pf/0Nfk/9vj8f/k7Pv/0tro/9Xc6v+us77/SExR/y09Tf9ki7T/YIau/xkYFv9hSSn/VUAl/1VA
        Jb5MOSFHAAAAIwAAAAEAAABmEw4I20w6If+GZjr/lXJB/5VyQf9SPiP/Vlhd/+Do9v/k7Pv/5Oz7/+Ts
        +//i6vn/5e38/56krv8vNDn/UFRb/8TL2P/Gzdr/ZWlv/ykzPv9QcJH/fq/i/4K06f8xQ1b/Tjsg/4Vk
        Ov9+Xzf/f2A3/lhCJvcQDAfaAAAAZg8LBuxsUi//lHFB/5RxQP+TcED/lHFA/4loO/8vJhr/mJ6o/+Xt
        /P/i6vn/4ur5/+Lq+f/l7f3/cXR7/zxVb/8+VnD/NDU4/zM5QP89Vm//dKHQ/4a57/+GuvD/WHug/yki
        Gf+IZzv/kG0//4BgN/99Xjb/fV42/1xFKP8NCQXsGhQL/4ZmOv+UcUD/k3BA/5NwQP+TcED/lXJB/2ZN
        K/87Ozz/ztbk/+Pr+//i6vn/4ur5/+Xt/P9wc3r/SWaE/3Ccyf80SmD/ZY22/4S37P+FuO7/hbjt/3in
        2P8lLzn/ZUwq/5VyQf+TcED/hWU6/31eNv9+Xzb/clYx/xYRCv8aFAv/hWU6/5RxQP+TcED/k3BA/5Nw
        QP+TcED/kG4//zstGv93fIX/5e39/+Hq+P/j7Pr/6fH//3l9hP8/WHL/hrvx/4W57v+Hu/H/hrrw/4S3
        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
        AP//AAD//wAA//8AAP//gAH///AP///4H/8=
</value>
  </data>
</root>